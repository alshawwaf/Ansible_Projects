---
- name: retreiving and changing the Gaia password policy settings (User Management -> Password Policy in Gaia Portal)
  hosts: gw_3
  connection: httpapi
  gather_facts: false
  collections:
    - check_point.gaia
  tasks:
    - name: get the existing the password policy settings
      cp_gaia_password_policy_facts:
      register: original_password_policy_settings

    - name: print original password policy settings
      debug:
        msg: "{{ original_password_policy_settings }}"

    - name: Change the password policy
      cp_gaia_password_policy:
        lock_settings: {
            "failed_attempts_settings": {
                # maximum allowed number of failed apptempts
                "failed_attempts_allowed": 10,
                # allow access again after 1200 by default
                "failed_lock_duration_seconds": 1200,
                # Deny access after failed login attempts
                "failed_lock_enabled": False,
                # Block admin user. Only available if failed_lock_enabled is true
                "failed_lock_enforced_on_admin": False,
              },
            "inactivity_settings": {
                # days of non-use before lock-out
                "inactivity_threshold_days": 365,
                # deny access to unused accounts
                "lock_unused_accounts_enabled": False,
              },
            "must_one_time_password_enabled": False,
            # Default: passwords vener expire
            "password_expiration_days": 60,
            # default to never lock out users when password expires
            "password_expiration_maximum_days_before_lock": 100,
            "password_expiration_warning_days": 7,
          }
        password_history: {
            # check for password reuse, default is false
            "check_history_enabled": True,
            "repeated_history_length": 10,
          }
        password_strength: {
            # 1: don't check, 2: Require 2 characters, 3: Require 3 characters, 4: Require 4 characters
            "complexity": 3,
            "minimum_length": 6,
            # A palindrome is a word that can be read the same way in either direction
            "palindrome_check_enabled": True,
          }
      register: new_passowrd_policy

    - name: print password policy results if changed
      debug:
        msg: "{{ new_passowrd_policy }}"
      when: new_passowrd_policy['changed'] == true
